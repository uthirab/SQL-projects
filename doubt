with c1 as (
	select hacker_id, count(*) as cc_ch
	from Challenges as c
	group by hacker_id
), c2 as (
	select max(cc_ch) as max_cc_ch 
	from c1
), c3 as (
	select cc_ch
	from c1
	where cc_ch < (select top 1 max_cc_ch from c2)
	group by cc_ch
	having count(*) = 1
	
	union 
	select max_cc_ch from c2
)
select h.hacker_id, h.name, c1.cc_ch
from c1 
join c3 on c1.cc_ch = c3.cc_ch
join Hackers as h on c1.hacker_id = h.hacker_id 
order by c1.cc_ch desc, hacker_id


SELECT
H.HACKER_ID, H.NAME ,COUNT(C.HACKER_ID)AS CT
FROM HACKERS H 
JOIN CHALLENGES C
ON H.HACKER_ID = C.HACKER_ID
GROUP BY  H.HACKER_ID, H.NAME
HAVING CT not in (select max(ct) from challenges c group by c.hacker_id)c
GROUP BY H.NAME
ORDER BY C.CHALLENGE_ID DESC;

/*SELECT h.hacker_id, h.name, count(c.hacker_id) as cnt 
FROM hackers h JOIN challenges c 
on (h.hacker_id=c.hacker_id) group by h.hacker_id, h.name, c.hacker_id 
having count(c.challenge_id) not in 
( SELECT max(total) FROM
(SELECT c.hacker_id, count(c.challenge_id) TOTAL FROM challenges c GROUP BY c.hacker_id) c where c.total <> (SELECT count(c.challenge_id) TOT FROM challenges GROUP BY c.hacker_id ) 
GROUP BY c.total having count(c.total) > 1 ) order by count(c.hacker_id) desc , h.hacker_id;*/

